type Question {
    picture_clue_url: String!
    text_clue: String!
    answer: String!
    author: User @relation(name: "question_creator")
    # ratings: [Rating] @relation
    usersAnswered: [User] @relation(name: "questions_answered")
    inCollection: Collection
    public: Boolean
}

type Collection {
    name: String!
    questions: [Question]
    owner: User @relation(name: "collections_owner")
}

type User {
    name: String!
    email: String!
    createdQuestions: [Question] @relation(name: "question_creator")
    questionsAnswered: [Question] @relation(name: "questions_answered")
    # createdRatings: [Rating] @relation
    ownedCollections: [Collection] @relation(name: "collections_owner")
}

# type Rating {
#     rater: User! 
#     question: Question!
#     rating: Int!
# }

type Query {
    allQuestions: [Question!]
    allUser: [User!]
    allPublicQuestions(public: Boolean!): [Question!]
    # allRatings: [Rating!]
    getUserByName(name: String!): User!
    getCollectionByName(name: String!): Collection!
    # questions_by_reverse_date: [String!, String!]
}